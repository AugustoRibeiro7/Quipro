generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  userName  String
  email     String     @unique
  password  String
  dateBirth DateTime
  userImage String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  points    Int        @default(0)
  progress  Progress[]

  @@map("users")
}

model Trail {
  id        Int        @id @default(autoincrement())
  title     String     @unique
  createdAt DateTime   @default(now())
  chapters  Chapter[]
  progress  Progress[]

  @@map("trails")
}

model Chapter {
  id        Int      @id @default(autoincrement())
  title     String
  trailId   Int
  createdAt DateTime @default(now())
  trail     Trail    @relation(fields: [trailId], references: [id], onDelete: Cascade)
  quizzes   Quiz[]

  @@map("chapters")
}

model Quiz {
  id            Int      @id @default(autoincrement())
  question      String
  options       String[]
  correctAnswer String
  image         String?
  explanation   String
  chapterId     Int
  chapter       Chapter  @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  @@map("quizzes")
}

model Progress {
  id               Int      @id @default(autoincrement())
  userId           Int
  trailId          Int
  currentChapterId Int?
  completed        Boolean  @default(false)
  trailScore       Int      @default(0)
  passed           Boolean  @default(false)
  createdAt        DateTime @default(now())
  trail            Trail    @relation(fields: [trailId], references: [id], onDelete: Cascade)
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, trailId])
  @@map("progress")
}
